syntax = "proto2";

package connection;

import "primitive.proto";

message ConnectionEvent {
  oneof event {
    ClosedConnection closed = 1;
    EvictedConnection evicted = 2;
    InboundConnection inbound = 3;
    OutboundConnection outbound = 4;
    MisbehavingConnection misbehaving = 5;
  }
}

// A P2P connection between two peers.
message Connection {
  required uint64  peer_id                 = 1;  // Peer id assigned by Bitcoin Core
  required string  addr                    = 2;  // Address of the peer
  required primitive.ConnType conn_type    = 3;
  required uint32  network                 = 4;  // The network this connection is on
  required uint64  net_group               = 5;  // The net_group assigend by Bitcoin Core
}

// A connection where the underlying socket has been closed.
message ClosedConnection {
  required Connection conn = 1;
  required uint64 last_block_time = 2;
  required uint64 last_tx_time = 3;
  required uint64 last_ping_time = 4;
  required uint64 min_ping_time = 5;
  required bool relays_txs = 6;
}

// A connection that Bitcoin Core choose to evict.
message EvictedConnection {
  required Connection conn = 1;
  required uint64 last_block_time = 2;
  required uint64 last_tx_time = 3;
  required uint64 last_ping_time = 4;
  required uint64 min_ping_time = 5;
  required bool relays_txs = 6;
}

// An inbound connection.
message InboundConnection {
  required Connection conn = 1;
  required uint64 services = 2;
  required bool inbound_onion = 3;
}

// An outbound connection.
message OutboundConnection {
  required Connection conn = 1;
}

// A connection that Bitcoin Core thinks is misbehaving.
message MisbehavingConnection {
  required uint64 id = 1;
  required int32 score_before = 2;
  required int32 score_increase = 3;
  required string xmessage = 4;
  required bool threshold_exceeded = 5;
}
