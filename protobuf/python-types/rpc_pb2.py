# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: rpc.proto
# Protobuf Python Version: 6.30.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    2,
    '',
    'rpc.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\trpc.proto\x12\x03rpc\"9\n\x08RPCEvent\x12$\n\npeer_infos\x18\x01 \x01(\x0b\x32\x0e.rpc.PeerInfosH\x00\x42\x07\n\x05\x65vent\")\n\tPeerInfos\x12\x1c\n\x05infos\x18\x01 \x03(\x0b\x32\r.rpc.PeerInfo\"\x9a\x08\n\x08PeerInfo\x12\n\n\x02id\x18\x01 \x02(\r\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x02(\t\x12\x14\n\x0c\x61\x64\x64ress_bind\x18\x03 \x02(\t\x12\x15\n\raddress_local\x18\x04 \x02(\t\x12\x0f\n\x07network\x18\x05 \x02(\t\x12\x11\n\tmapped_as\x18\x06 \x02(\r\x12\x10\n\x08services\x18\x07 \x02(\t\x12\x1a\n\x12relay_transactions\x18\x08 \x02(\x08\x12\x11\n\tlast_send\x18\t \x02(\x03\x12\x15\n\rlast_received\x18\n \x02(\x03\x12\x18\n\x10last_transaction\x18\x0b \x02(\x03\x12\x12\n\nlast_block\x18\x0c \x02(\x03\x12\x12\n\nbytes_sent\x18\r \x02(\x04\x12\x16\n\x0e\x62ytes_received\x18\x0e \x02(\x04\x12\x17\n\x0f\x63onnection_time\x18\x0f \x02(\x03\x12\x13\n\x0btime_offset\x18\x10 \x02(\x03\x12\x11\n\tping_time\x18\x11 \x02(\x01\x12\x14\n\x0cminimum_ping\x18\x12 \x02(\x01\x12\x11\n\tping_wait\x18\x13 \x02(\x01\x12\x0f\n\x07version\x18\x14 \x02(\r\x12\x12\n\nsubversion\x18\x15 \x02(\t\x12\x0f\n\x07inbound\x18\x16 \x02(\x08\x12\x14\n\x0c\x62ip152_hb_to\x18\x17 \x02(\x08\x12\x16\n\x0e\x62ip152_hb_from\x18\x18 \x02(\x08\x12\x17\n\x0fstarting_height\x18\x19 \x02(\x03\x12\x16\n\x0esynced_headers\x18\x1a \x02(\x03\x12\x15\n\rsynced_blocks\x18\x1b \x02(\x03\x12\x10\n\x08inflight\x18\x1c \x03(\x04\x12\x1a\n\x12\x61\x64\x64r_relay_enabled\x18\x1d \x02(\x08\x12\x16\n\x0e\x61\x64\x64r_processed\x18\x1e \x02(\x04\x12\x19\n\x11\x61\x64\x64r_rate_limited\x18\x1f \x02(\x04\x12\x13\n\x0bpermissions\x18  \x03(\t\x12\x14\n\x0cminfeefilter\x18! \x02(\x01\x12\x46\n\x16\x62ytes_sent_per_message\x18\" \x03(\x0b\x32&.rpc.PeerInfo.BytesSentPerMessageEntry\x12N\n\x1a\x62ytes_received_per_message\x18# \x03(\x0b\x32*.rpc.PeerInfo.BytesReceivedPerMessageEntry\x12\x17\n\x0f\x63onnection_type\x18$ \x02(\t\x12\x1f\n\x17transport_protocol_type\x18% \x02(\t\x1a:\n\x18\x42ytesSentPerMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x04:\x02\x38\x01\x1a>\n\x1c\x42ytesReceivedPerMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x04:\x02\x38\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'rpc_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_PEERINFO_BYTESSENTPERMESSAGEENTRY']._loaded_options = None
  _globals['_PEERINFO_BYTESSENTPERMESSAGEENTRY']._serialized_options = b'8\001'
  _globals['_PEERINFO_BYTESRECEIVEDPERMESSAGEENTRY']._loaded_options = None
  _globals['_PEERINFO_BYTESRECEIVEDPERMESSAGEENTRY']._serialized_options = b'8\001'
  _globals['_RPCEVENT']._serialized_start=18
  _globals['_RPCEVENT']._serialized_end=75
  _globals['_PEERINFOS']._serialized_start=77
  _globals['_PEERINFOS']._serialized_end=118
  _globals['_PEERINFO']._serialized_start=121
  _globals['_PEERINFO']._serialized_end=1171
  _globals['_PEERINFO_BYTESSENTPERMESSAGEENTRY']._serialized_start=1049
  _globals['_PEERINFO_BYTESSENTPERMESSAGEENTRY']._serialized_end=1107
  _globals['_PEERINFO_BYTESRECEIVEDPERMESSAGEENTRY']._serialized_start=1109
  _globals['_PEERINFO_BYTESRECEIVEDPERMESSAGEENTRY']._serialized_end=1171
# @@protoc_insertion_point(module_scope)
